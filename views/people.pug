extends layout

block content






  //defining employee types
  .page-header
    h1 employee types
    head
      script(type='text/javascript').

        function deleteRow2(obj) {
          var index = obj.parentNode.parentNode.rowIndex;
          var table = document.getElementById("myTableData2");
          var currentTD = obj.parentNode.parentNode.rowIndex;
          var row_length = document.getElementById("myTableData2").rows[currentTD].cells.length;

          var employeetype = {

            employee_type: document.getElementById("myTableData2").rows[currentTD].cells[0].innerHTML

           }

          setCSRFToken($('meta[name="csrf-token"]').attr('content'));

          $.ajax({
              type: 'POST',
              data: employeetype,
              url: '/people/deleteemployeetype',
              dataType: 'JSON'
          });

          table.deleteRow(index);
        }




    #myform
    form.form-horizontal(action='/people/employeetype', method='POST')
      input(type='hidden', name='_csrf', value=_csrf)
      br
      b Simple form with name and age ...
      br
      br
      |         Employee Type:
      input#name(type='text', name='employee_type_define', placeholder='Employee Type', autofocus='autofocus', required='required')
      br
      br
      .form-group
        .col-sm-offset-3.col-sm-7
          button.col-sm-3.btn.btn-primary(type='submit', value='Add') Add
      br
      br
      br
      #mydata
        b Current data in the system ...
        table#myTableData2(border='1', cellpadding='2')
          tr
            th
              b Employee type
            th
              b Delete

          each emt in employeetype

            // build a new table row
            tr

              // insert table data
              td #{emt.employee_type}

              // add the update and delete buttons

              td
                input(type="button" name = "Delete" value = "Delete" onClick="Javacsript:deleteRow2(this)")

              // move to next person in the people array ...

        br
        br
        br










  //defining shifts
  .page-header
    h1 shifts
    head
      script(type='text/javascript').
        function addRow() {
        //variables
          var myName = document.getElementById("name");
          var type = document.getElementById("type");
          var min_hours = document.getElementById("min_hours");
          var max_hours = document.getElementById("max_hours");
          var email = document.getElementById("email");
          var phone_number = document.getElementById("phone_number");
          var table = document.getElementById("myTableData");
          var rowCount = table.rows.length;
          var row = table.insertRow(rowCount);
          row.insertCell(0).innerHTML= myName.value;
          row.insertCell(1).innerHTML= type.value;
          row.insertCell(2).innerHTML= min_hours.value;
          row.insertCell(3).innerHTML= max_hours.value;
          row.insertCell(4).innerHTML= email.value;
          row.insertCell(5).innerHTML= phone_number.value;
          row.insertCell(6).innerHTML= '<input type="button" value = "Update" onClick="Javacsript:editRow(this)">';
          row.insertCell(7).innerHTML= '<input type="button" value = "Delete" onClick="Javacsript:deleteRow(this)">';
        }



        function deleteRow(obj) {
          var index = obj.parentNode.parentNode.rowIndex;
          var table = document.getElementById("myTableData");
          var currentTD = obj.parentNode.parentNode.rowIndex;
          var row_length = document.getElementById("myTableData").rows[currentTD].cells.length;

          var shift = {

            employee_type: document.getElementById("myTableData").rows[currentTD].cells[0].innerHTML,
            days_worked: document.getElementById("myTableData").rows[currentTD].cells[1].innerHTML,
            num_employees: document.getElementById("myTableData").rows[currentTD].cells[2].innerHTML,
            shift_start_time: document.getElementById("myTableData").rows[currentTD].cells[3].innerHTML,
            shift_end_time: document.getElementById("myTableData").rows[currentTD].cells[4].innerHTML

           }

          setCSRFToken($('meta[name="csrf-token"]').attr('content'));

          $.ajax({
              type: 'POST',
              data: shift,
              url: '/people/deleteshift',
              dataType: 'JSON'
          });

          table.deleteRow(index);
        }


        //setting some global variables for updating shifts
        var employee_type
        var days_worked
        var num_employees
        var shift_start_time
        var shift_end_time



        function editRow(obj) {
          var currentTD = obj.parentNode.parentNode.rowIndex;
          var table = document.getElementById("myTableData");
          var row_length = document.getElementById("myTableData").rows[currentTD].cells.length;

          if (obj.value == 'Edit') {

              document.getElementById("myTableData").rows[currentTD].cells[0].setAttribute("contentEditable", true);
              document.getElementById("myTableData").rows[currentTD].cells[1].setAttribute("contentEditable", true);
              document.getElementById("myTableData").rows[currentTD].cells[2].setAttribute("contentEditable", true);
              document.getElementById("myTableData").rows[currentTD].cells[3].setAttribute("contentEditable", true);
              document.getElementById("myTableData").rows[currentTD].cells[4].setAttribute("contentEditable", true);
              document.getElementById("myTableData").rows[currentTD].cells[5].setAttribute("contentEditable", true);
              document.getElementById("myTableData").rows[currentTD].style.backgroundColor = "#A4D9F5";
              employee_type = document.getElementById("myTableData").rows[currentTD].cells[0].innerHTML
              days_worked = document.getElementById("myTableData").rows[currentTD].cells[1].innerHTML
              num_employees = document.getElementById("myTableData").rows[currentTD].cells[2].innerHTML
              shift_start_time = document.getElementById("myTableData").rows[currentTD].cells[3].innerHTML
              shift_end_time = document.getElementById("myTableData").rows[currentTD].cells[4].innerHTML
              obj.value = 'Save'
            }

          else {
              document.getElementById("myTableData").rows[currentTD].cells[0].setAttribute("contentEditable", false);
              document.getElementById("myTableData").rows[currentTD].cells[1].setAttribute("contentEditable", false);
              document.getElementById("myTableData").rows[currentTD].cells[2].setAttribute("contentEditable", false);
              document.getElementById("myTableData").rows[currentTD].cells[3].setAttribute("contentEditable", false);
              document.getElementById("myTableData").rows[currentTD].cells[4].setAttribute("contentEditable", false);
              document.getElementById("myTableData").rows[currentTD].cells[5].setAttribute("contentEditable", false);
              document.getElementById("myTableData").rows[currentTD].style.backgroundColor = "#FFFFFF"
              obj.value = 'Edit'

              var newshift = {
                       'employee_type': document.getElementById("myTableData").rows[currentTD].cells[0].innerHTML ,
                       'days_worked': document.getElementById("myTableData").rows[currentTD].cells[1].innerHTML,
                       'num_employees':  document.getElementById("myTableData").rows[currentTD].cells[2].innerHTML,
                       'shift_start_time':  document.getElementById("myTableData").rows[currentTD].cells[3].innerHTML,
                       'shift_end_time':  document.getElementById("myTableData").rows[currentTD].cells[4].innerHTML,
                       'old_employee_type':employee_type,
                       'old_days_worked': days_worked,
                       'old_num_employees': num_employees,
                       'old_shift_start_time': shift_start_time,
                       'old_shift_end_time': shift_end_time
               }


              setCSRFToken($('meta[name="csrf-token"]').attr('content'));

              $.ajax({
                  type: 'POST',
                  data: newshift,
                  url: '/people/updateshift',
                  dataType: 'JSON'
              });

          }

        }


    #myform
    form.form-horizontal(action='/people/shift', method='POST')
      input(type='hidden', name='_csrf', value=_csrf)
      br
      b Simple form with name and age ...
      br
      br
      |         Employee Type:
      input#name(type='text', name='employee_type', placeholder='Employee Type', autofocus='autofocus', required='required')
      br
      br
      |         Days of week worked:
      br
      br
      |         Monday:
      input#type(type='checkbox', name='days_week_worked', value = 'Monday', autofocus='autofocus')
      |         Tuesday:
      input#type(type='checkbox', name='days_week_worked', value = 'Tuesday', autofocus='autofocus', )
      |         Wednesday:
      input#type(type='checkbox', name='days_week_worked', value = 'Wednesday', autofocus='autofocus')
      |         Thursday:
      input#type(type='checkbox', name='days_week_worked',  value = 'Thursday', autofocus='autofocus')
      |         Friday:
      input#type(type='checkbox', name='days_week_worked', value = 'Friday', autofocus='autofocus')
      |         Saturday:
      input#type(type='checkbox', name='days_week_worked', value = 'Saturday', autofocus='autofocus')
      |         Sunday:
      input#type(type='checkbox', name='days_week_worked', value = 'Sunday', autofocus='autofocus')
      br
      br
      |         Number of employees needed:
      input#min_hours(type='number', name='num_employees', placeholder='# of Employees', autofocus='autofocus', required='required')
      br
      br
      |         Shift start:
      input#max_hours(type='text', name='start_time', placeholder='12:00', autofocus='autofocus', required='required')
      br
      br
      |         Shift end time:
      input#email(type='text', name='end_time', placeholder='12:00', autofocus='autofocus', required='required')
      br
      br

      .form-group
        .col-sm-offset-3.col-sm-7
          button.col-sm-3.btn.btn-primary(type='submit', value='Add') Add
    br
    br
    br
    #mydata
      b Current data in the system ...
      table#myTableData(border='1', cellpadding='2')
        tr
          th
            b Employee type
          th
            b Days worked
          th
            b Number of employees
          th
            b Shift start
          th
            b Shift end
          th
            b Update
          th
            b Delete

        each shf in shift

          // build a new table row
          tr

            // insert table data
            td #{shf.employee_type}
            td #{shf.days_worked}
            td #{shf.num_employees}
            td #{shf.shift_start_time}
            td #{shf.shift_end_time}

            // add the update and delete buttons
            td
              input(type="button" name = "btn-Edit" value = "Edit" onClick="Javacsript:editRow(this)")
            td
              input(type="button" name = "Delete" value = "Delete" onClick="Javacsript:deleteRow(this)")

            // move to next person in the people array ...





    br
    br










  .page-header
    h1 people

    head
      script(src='http://ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js').
      script(type='text/javascript').
        function addRow1() {
        //variables
          var myName = document.getElementById("name");
          var type = document.getElementById("type");
          var min_hours = document.getElementById("min_hours");
          var max_hours = document.getElementById("max_hours");
          var email = document.getElementById("email");
          var phone_number = document.getElementById("phone_number");
          var table = document.getElementById("myTableData1");
          var rowCount = table.rows.length;
          var row = table.insertRow(rowCount);
          row.insertCell(0).innerHTML= myName.value;
          row.insertCell(1).innerHTML= type.value;
          row.insertCell(2).innerHTML= min_hours.value;
          row.insertCell(3).innerHTML= max_hours.value;
          row.insertCell(4).innerHTML= email.value;
          row.insertCell(5).innerHTML= phone_number.value;
          row.insertCell(6).innerHTML= '<input type="button" value = "Update" onClick="Javacsript:editRow(this)">';
          row.insertCell(7).innerHTML= '<input type="button" value = "Delete" onClick="Javacsript:deleteRow(this)">';
        }



        function deleteRow1(obj) {
          var index = obj.parentNode.parentNode.rowIndex;
          var table = document.getElementById("myTableData1");
          var currentTD = obj.parentNode.parentNode.rowIndex;
          var row_length = document.getElementById("myTableData1").rows[currentTD].cells.length;
          var user = {
             'name': document.getElementById("myTableData1").rows[currentTD].cells[0].innerHTML ,
             'type': document.getElementById("myTableData1").rows[currentTD].cells[1].innerHTML,
             'min_hours':  document.getElementById("myTableData1").rows[currentTD].cells[2].innerHTML,
             'max_hours':  document.getElementById("myTableData1").rows[currentTD].cells[3].innerHTML,
             'email':  document.getElementById("myTableData1").rows[currentTD].cells[4].innerHTML,
             'phone_number':  document.getElementById("myTableData1").rows[currentTD].cells[5].innerHTML
           }

          setCSRFToken($('meta[name="csrf-token"]').attr('content'));
          $.ajax({
              type: 'POST',
              data: user,
              url: '/people/deletepeople',
              dataType: 'JSON'
          });
          table.deleteRow(index);
        }


        //setting global variables
        var var_name
        var var_type
        var var_min_hours
        var var_max_hours
        var var_email
        var var_phone_number


        var CSRF_HEADER = 'x-csrf-token';

        var setCSRFToken = function (securityToken) {
          jQuery.ajaxPrefilter(function (options, _, xhr) {
            if (!xhr.crossDomain) {
              xhr.setRequestHeader(CSRF_HEADER, securityToken);
            }
          });
        };



        function editRow1(obj) {
          var currentTD = obj.parentNode.parentNode.rowIndex;
          var table = document.getElementById("myTableData1");
          var row_length = document.getElementById("myTableData1").rows[currentTD].cells.length;
          console.log(obj.parentNode);

          if (obj.value == 'Edit') {
            document.getElementById("myTableData1").rows[currentTD].cells[0].setAttribute("contentEditable", true);
            document.getElementById("myTableData1").rows[currentTD].cells[1].setAttribute("contentEditable", true);
            document.getElementById("myTableData1").rows[currentTD].cells[2].setAttribute("contentEditable", true);
            document.getElementById("myTableData1").rows[currentTD].cells[3].setAttribute("contentEditable", true);
            document.getElementById("myTableData1").rows[currentTD].cells[4].setAttribute("contentEditable", true);
            document.getElementById("myTableData1").rows[currentTD].cells[5].setAttribute("contentEditable", true);

            document.getElementById("myTableData1").rows[currentTD].style.backgroundColor = "#A4D9F5";

             var_name = document.getElementById("myTableData1").rows[currentTD].cells[0].innerHTML
             var_type =  document.getElementById("myTableData1").rows[currentTD].cells[1].innerHTML
             var_min_hours =  document.getElementById("myTableData1").rows[currentTD].cells[2].innerHTML
             var_max_hours=  document.getElementById("myTableData1").rows[currentTD].cells[3].innerHTML
             var_email=  document.getElementById("myTableData1").rows[currentTD].cells[4].innerHTML
             var_phone_number =  document.getElementById("myTableData1").rows[currentTD].cells[5].innerHTML

           obj.value = 'Save'
          } else {
            document.getElementById("myTableData1").rows[currentTD].cells[0].setAttribute("contentEditable", false);
            document.getElementById("myTableData1").rows[currentTD].cells[1].setAttribute("contentEditable", false);
            document.getElementById("myTableData1").rows[currentTD].cells[2].setAttribute("contentEditable", false);
            document.getElementById("myTableData1").rows[currentTD].cells[3].setAttribute("contentEditable", false);
            document.getElementById("myTableData1").rows[currentTD].cells[4].setAttribute("contentEditable", false);
            document.getElementById("myTableData1").rows[currentTD].cells[5].setAttribute("contentEditable", false);
            document.getElementById("myTableData1").rows[currentTD].style.backgroundColor = "#FFFFFF"
            obj.value = 'Edit'


            var newUser = {
                     'name': document.getElementById("myTableData1").rows[currentTD].cells[0].innerHTML ,
                     'type': document.getElementById("myTableData1").rows[currentTD].cells[1].innerHTML,
                     'min_hours':  document.getElementById("myTableData1").rows[currentTD].cells[2].innerHTML,
                     'max_hours':  document.getElementById("myTableData1").rows[currentTD].cells[3].innerHTML,
                     'email':  document.getElementById("myTableData1").rows[currentTD].cells[4].innerHTML,
                     'phone_number':  document.getElementById("myTableData1").rows[currentTD].cells[5].innerHTML,
                     'old_name':var_name,
                     'old_type': var_type,
                     'old_min_hours': var_min_hours,
                     'old_max_hours': var_max_hours,
                     'old_email': var_email,
                     'old_phone_number':  var_phone_number
             }


            setCSRFToken($('meta[name="csrf-token"]').attr('content'));

            $.ajax({
                type: 'POST',
                data: newUser,
                url: '/people/updatepeople',
                dataType: 'JSON'
            });

        }}



    #myform
    form.form-horizontal(action='/people/people', method='POST')
      input(type='hidden', name='_csrf', value=_csrf)
      br
      b Simple form with name and age ...
      br
      br
      |         Name:
      input#name(type='text', name='name', placeholder='Name', autofocus='autofocus', required='required')
      br
      br
      |         Type:
      input#type(type='text', name='type', placeholder='Employee Type', autofocus='autofocus', required='required')
      br
      br
      |         Min Hours:
      input#min_hours(type='number', name='min_hours', placeholder='Min hours required', autofocus='autofocus', required='required')
      br
      br
      |         Max Hours:
      input#max_hours(type='number', name='max_hours', placeholder='Max hours required', autofocus='autofocus', required='required')
      br
      br
      |         Email:
      input#email(type='email', name='email', placeholder='Email', autofocus='autofocus', required='required')
      br
      br
      |         Phone Number:
      input#phone_number(type='text', name='phone_number', placeholder='Phone Number', autofocus='autofocus', required='required')
      br
      br
      .form-group
        .col-sm-offset-3.col-sm-7
          button.col-sm-3.btn.btn-primary(type='submit', value='Add', onclick='addRow1()') Add
    br
    br
    #mydata
      b Current employee data!
      table#myTableData1(border='1', cellpadding='2')
        tr
          th
            b Name
          th
            b Type
          th
            b Min Hours
          th
            b Max Hours
          th
            b Email
          th
            b Phone Number
          th
            b Update
          th
            b Delete

        each person in people

          // build a new table row
          tr

            // insert table data
            td #{person.name}
            td #{person.type}
            td #{person.min_hours}
            td #{person.max_hours}
            td #{person.email}
            td #{person.phone_number}

            // add the update and delete buttons
            td
                  input(type="button" name = "Edit" value = "Edit" onClick="Javacsript:editRow1(this)")
            td
              input(type="button" value = "Delete" onClick="Javacsript:deleteRow1(this)")

            // move to next person in the people array ...


      br
      br
