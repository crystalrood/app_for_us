extends layout

block content


  //defining schedule start day
  #people.page-header
    .heading
      link(rel='stylesheet', type='text/css', href='css/launch_main.css')
      link(rel='stylesheet', type='text/css', href='css/launch_devices.css')
      .container-sml.text-center
        .col-12
          #login.heading
            | Schedule Start Day

    head
      script(type='text/javascript').

        window.onload = function change_table() {
          //gettting json values
          var schedule_start = document.getElementById("schedule_start").value;
          var schedule_start_json = JSON.parse( schedule_start );
          var schedule_start_value = (schedule_start_json[0].day_schedule_start).toLowerCase()

          //var dropdown = document.getElementById('myselect')
          //putting items from json into list

          var x = document.getElementById("myselect");
           var monday = document.createElement("option");
           var tuesday = document.createElement("option");
           var wednesday = document.createElement("option");
           var thursday = document.createElement("option");
           var friday = document.createElement("option");
           var saturday = document.createElement("option");
           var sunday = document.createElement("option");

           monday.text = 'Monday';
           tuesday.text = 'Tuesday';
           wednesday.text = 'Wednesday';
           thursday.text = 'Thursday';
           friday.text = 'Friday';
           saturday.text = 'Saturday';
           sunday.text = 'Sunday';

           if (schedule_start_value == 'monday'){
             monday.selected = 'true'
           }
           if (schedule_start_value == 'tuesday'){
             tuesday.selected = 'true'
           }
           if (schedule_start_value == 'thursday'){
             thursday.selected = 'true'
           }
           if (schedule_start_value == 'wednesday'){
             wednesday.selected = 'true'
           }
           if (schedule_start_value == 'friday'){
             friday.selected = 'true'
           }
           if (schedule_start_value == 'saturday'){
             saturday.selected = 'true'
           }
           if (schedule_start_value == 'sunday'){
             sunday.selected = 'true'
           }
           x.add(monday);
           x.add(tuesday);
           x.add(wednesday);
           x.add(thursday);
           x.add(friday);
           x.add(saturday);
           x.add(sunday);


        };

        function popup() {
          var x = document.getElementById("myPopup");

          var y = document.getElementsByClassName("modal-body")[0].innerHTML
          
          
          //changes inner html
          //document.getElementsByClassName("modal-body")[0].innerHTML = "<p> Hello </p>"
          //console.log(y)
          
          //pulling in the value from the drop down
          var schedule_start_value = document.getElementById("myselect").value;
          
          //setting up a variable that has the numeric day the of the dropdown
          var day_schedule_start_value = 0  
          
          //going through all of these if's to see what value to set the numeric day to
          if (schedule_start_value == 'Monday'){
            day_schedule_start_value = 1
          }
          if (schedule_start_value == 'Tuesday'){
            day_schedule_start_value = 2
          }
          if (schedule_start_value == 'Thursday'){
            day_schedule_start_value = 4
          }
          if (schedule_start_value == 'Wednesday'){
            day_schedule_start_value = 3
          }
          if (schedule_start_value == 'Friday'){
            day_schedule_start_value = 5
          }
          if (schedule_start_value == 'Saturday'){
            day_schedule_start_value = 6
          }
          if (schedule_start_value == 'Sunday'){
            day_schedule_start_value = 7
          }  
          
          //getting the date information brough in 
          //via http://stackoverflow.com/questions/1531093/how-do-i-get-the-current-date-in-javascript
          var today = new Date();
          var dd = today.getDate();
          var mm = today.getMonth()+1; //January is 0!
          var yyyy = today.getFullYear();

          if(dd<10) {
              dd='0'+dd
          } 

          if(mm<10) {
              mm='0'+mm
          } 

          today = mm+'/'+dd+'/'+yyyy;
          
          // Get the current time as Unix time
          var currentUnixTime = new Date().getTime()/1000;
          var currentUnixTimePlus13 = currentUnixTime + (13*60*60*24)
          
    
          //declaring variables for loop
          var firstScheduleStartDate = new Date();
          var multipleVariable = (24*60*60)
          
          //need to compare day_schedule_start_value to the currentUnixTimePlus13
          //0 checkes to see if the currentUnixTimePlus13 time is equal to day_schedule_start_value
          //and if it's not, it will continue through the loop

          for (i = 0; i <= 7; i++) {
              //checking to see if the current First Schedule Start Date  is equal to the 
              // value in the drop down
              if (firstScheduleStartDate.getDay() == day_schedule_start_value) {
                 break; 
               }
               
               //setting the multiplier which will increment by days
               multipleVariable = i * multipleVariable
            
              //setting the first schedule start date to the 13 day window plus the multiplier
              firstScheduleStartDate.setTime((currentUnixTimePlus13+multipleVariable)*1000); 
              
              //resetting multiplication variable at the end of the loop
              multipleVariable = (24*60*60)
          }
          
          
          //additional date information we need
          var firstScheduleReleaseDate = new Date()
          firstScheduleReleaseDate.setTime((firstScheduleStartDate-(7*60*60*24*1000))); 
          
          
          var firstScheduleOption1 = new Date(firstScheduleStartDate.getTime() + (1*7*60*60*24*1000));
          var firstScheduleOption2 = new Date(firstScheduleStartDate.getTime() + (2*7*60*60*24*1000));
          var firstScheduleOption3 = new Date(firstScheduleStartDate.getTime() + (3*7*60*60*24*1000));
          var firstScheduleOption4 = new Date(firstScheduleStartDate.getTime() + (4*7*60*60*24*1000));
          var firstScheduleOption5 = new Date(firstScheduleStartDate.getTime() + (5*7*60*60*24*1000));


          // summary of variables for the dates 
          //currentUnixTime = current time
          //currentUnixTimePlus13 = current time +  13 days
          //firstScheduleStartDate = current time + 13 days + <# of days it takes to get to the first weekday corresponding with the dropdown seletion>
          //firstScheduleReleaseDate = firstScheduleStartDate - 7 days
          //firstScheduleOption1-5 = firstScheduleStartDate + X weeks(s)
          
          var modal_text = 'Based on your selection, the earliest schedule will start on '+ firstScheduleStartDate.toDateString() + ','
          modal_text += ' and it will go out to your employees on ' + firstScheduleReleaseDate.toDateString() + '.'
          modal_text += ' Are you okay with this timeline? If not, the other option you have is to extend the first schedule to start on a day in the future. '
          var modal_text3 = 'Are you okay with the timeline outline above?'          
          var modal_text4 = 'Yes:<input type="radio" name = "radio1" value ="Yes" class="radio-inline" checked="checked" onClick="Javacsript:onclick_modal_option()"/>     '
          var modal_text5 = '     No:<input type="radio" name = "radio1" value ="No" class="radio-inline" onClick="Javacsript:onclick_modal_option()"/>'
          var modal_text6 = 'When would you like your schedule to start?   '
          var modal_select = '<select id="myselect1" name="days_week_worked" disabled = "true"><option>'+ firstScheduleOption1.toDateString() + '</option>'
          modal_select+= '<option>'+ firstScheduleOption2.toDateString() + '</option>' +'<option >'+ firstScheduleOption3.toDateString() + '</option>'
          modal_select+='<option>'+ firstScheduleOption4.toDateString() + '</option>' +'<option>'+ firstScheduleOption5.toDateString() + '</option>'
          modal_select+= '</select>'
          var modal_button =  '<button type="submit" value="Add" class="col-sm-3 btn btn-primary" onClick="Javacsript:save_modal()">Save</button>' 
                    
          var all_modal_text =  "<p>"+ modal_text+ "</p>"  + "<br></br>" 
          all_modal_text += "<p>"+ modal_text3 + "</p>" 
          all_modal_text += modal_text4 + modal_text5
          all_modal_text += "<br></br>"  + "<p>"+ modal_text6 + modal_select + "</p>" + "<br></br>"
          all_modal_text += modal_button + "<br></br>"
          
         document.getElementById("modal_body1").innerHTML = all_modal_text
          //console.log(all_modal_text)

          if (x.style.display === 'none') {
            x.style.display = 'block';
          } else {
            x.style.display = 'none';
          }

        };


        function onclick_modal_option() {
          var check_value = $("#myPopup input[type='radio']:checked").val();          
          
          if (check_value == "Yes") {
            document.getElementById("myselect1").disabled=true;
          } else {
            document.getElementById("myselect1").disabled=false;
          }
          
        }

        function close_span() {
            document.getElementById("myPopup").style.display = "none";
        }
        
        

        function save_modal() {
          
          var dropdown_value = document.getElementById("myselect").value;
          var dropdown_value = document.getElementById("myselect").value;
          
          console.log(schedule_start)
          console.log('mimsey got this to work')
        };



    br


    #myform
    form.form-group()
      input.form-control(type='hidden', name='_csrf', value=_csrf)
      br
      #helper.label.control-label Select the day you want your 1 week schedule to start:
      br
      br
      input(type='hidden', id="schedule_start", value= JSON.stringify(schedule))

      select(id='myselect', name='days_week_worked')

      br
      br

      .form-group
        .col-sm-offset-2.col-sm-7
          input(type="button" name = "Delete" value = "Confirm and save" class="col-md-3 btn btn-primary" onClick="Javacsript:popup(this)")

      br
      br
      br

    #myPopup.ui-content(data-role='popup', style='display: none;')
      div
      #myModal.modal
      // Modal content
      //example modal code: https://www.w3schools.com/howto/howto_css_modals.asp
      .modal-content
        .modal-header
          span.close(onClick = "Javascript:close_span()") ×
          h2 Next schedules start date
        #modal_body1.modal-body
          p Based on your selection the earliest schedule will be for the week of 
          input.checkbox-inline(type='checkbox')

        #modal_body2.modal-body
          p Based on your selection the earliest schedule will be for the week of 
          input.checkbox-inline(type='checkbox')
            
        #modal_body3.modal-body
          p Based on your selection the earliest schedule will be for the week of 
          input.checkbox-inline(type='checkbox')

        .modal-footer
          h4 QuickShifts








  //defining employee types
  #people.page-header
    .heading
      link(rel='stylesheet', type='text/css', href='css/launch_main.css')
      link(rel='stylesheet', type='text/css', href='css/launch_devices.css')
      .container-sml.text-center
        .col-12
          #login.heading
            | Employee Types
      script(type='text/javascript').

        function deleteRow2(obj) {
          var index = obj.parentNode.parentNode.rowIndex;
          var table = document.getElementById("myTableData2");
          var currentTD = obj.parentNode.parentNode.rowIndex;
          var row_length = document.getElementById("myTableData2").rows[currentTD].cells.length;

          var employeetype = {

            employee_type: document.getElementById("myTableData2").rows[currentTD].cells[0].innerHTML

           }

          setCSRFToken($('meta[name="csrf-token"]').attr('content'));

          $.ajax({
              type: 'POST',
              data: employeetype,
              url: '/people/deleteemployeetype',
              dataType: 'JSON'
          });

          table.deleteRow(index);
        }




    #myform
    form.form-group(action='/people/employeetype', method='POST')
      input.form-control(type='hidden', name='_csrf', value=_csrf)
      br
      #helper.label.control-label Enter employee types below:
      br
      br
      label.col-sm-2.control-label(for='employee_type_define') Employee Type:
      .col-sm-8
        input#name.form-control(type='text', name='employee_type_define', placeholder='Employee Type', autofocus='autofocus', required='required')
      br
      br
      br
      .form-group
        .col-sm-offset-2.col-sm-7
          button.col-sm-3.btn.btn-primary(type='submit', value='Add') Add
      br
      br
      #mydata
        table#myTableData2(border='1', cellpadding='2')
          tr
            th
              b Employee type
            th
              b Delete

          each emt in employeetype

            // build a new table row
            tr

              // insert table data
              td #{emt.employee_type}

              // add the update and delete buttons

              td
                input(type="button" name = "Delete" value = "Delete" onClick="Javacsript:deleteRow2(this)")

              // move to next person in the people array ...

        br
        br








  //defining shifts
  #people.page-header
    .heading
      link(rel='stylesheet', type='text/css', href='css/launch_main.css')
      link(rel='stylesheet', type='text/css', href='css/launch_devices.css')
      .container-sml.text-center
        .col-12
          #login.heading
            | Shifts
      head
      script(type='text/javascript').
        function addRow() {
        //variables
          var myName = document.getElementById("name");
          var type = document.getElementById("type");
          var min_hours = document.getElementById("min_hours");
          var max_hours = document.getElementById("max_hours");
          var email = document.getElementById("email");
          var phone_number = document.getElementById("phone_number");
          var table = document.getElementById("myTableData");
          var rowCount = table.rows.length;
          var row = table.insertRow(rowCount);
          row.insertCell(0).innerHTML= myName.value;
          row.insertCell(1).innerHTML= type.value;
          row.insertCell(2).innerHTML= min_hours.value;
          row.insertCell(3).innerHTML= max_hours.value;
          row.insertCell(4).innerHTML= email.value;
          row.insertCell(5).innerHTML= phone_number.value;
          row.insertCell(6).innerHTML= '<input type="button" value = "Update" onClick="Javacsript:editRow(this)">';
          row.insertCell(7).innerHTML= '<input type="button" value = "Delete" onClick="Javacsript:deleteRow(this)">';
        }



        function deleteRow(obj) {
          var index = obj.parentNode.parentNode.rowIndex;
          var table = document.getElementById("myTableData");
          var currentTD = obj.parentNode.parentNode.rowIndex;
          var row_length = document.getElementById("myTableData").rows[currentTD].cells.length;

          var shift = {

            employee_type: document.getElementById("myTableData").rows[currentTD].cells[0].innerHTML,
            days_worked: document.getElementById("myTableData").rows[currentTD].cells[1].innerHTML,
            num_employees: document.getElementById("myTableData").rows[currentTD].cells[2].innerHTML,
            shift_start_time: document.getElementById("myTableData").rows[currentTD].cells[3].innerHTML,
            shift_end_time: document.getElementById("myTableData").rows[currentTD].cells[4].innerHTML

           }

          setCSRFToken($('meta[name="csrf-token"]').attr('content'));

          $.ajax({
              type: 'POST',
              data: shift,
              url: '/people/deleteshift',
              dataType: 'JSON'
          });

          table.deleteRow(index);
        }


        //setting some global variables for updating shifts
        var employee_type
        var days_worked
        var num_employees
        var shift_start_time
        var shift_end_time



        function editRow(obj) {
          var currentTD = obj.parentNode.parentNode.rowIndex;
          var table = document.getElementById("myTableData");
          var row_length = document.getElementById("myTableData").rows[currentTD].cells.length;

          if (obj.value == 'Edit') {

              document.getElementById("myTableData").rows[currentTD].cells[0].setAttribute("contentEditable", true);
              document.getElementById("myTableData").rows[currentTD].cells[1].setAttribute("contentEditable", true);
              document.getElementById("myTableData").rows[currentTD].cells[2].setAttribute("contentEditable", true);
              document.getElementById("myTableData").rows[currentTD].cells[3].setAttribute("contentEditable", true);
              document.getElementById("myTableData").rows[currentTD].cells[4].setAttribute("contentEditable", true);
              document.getElementById("myTableData").rows[currentTD].cells[5].setAttribute("contentEditable", true);
              document.getElementById("myTableData").rows[currentTD].style.backgroundColor = "#d2f9e3";
              employee_type = document.getElementById("myTableData").rows[currentTD].cells[0].innerHTML
              days_worked = document.getElementById("myTableData").rows[currentTD].cells[1].innerHTML
              num_employees = document.getElementById("myTableData").rows[currentTD].cells[2].innerHTML
              shift_start_time = document.getElementById("myTableData").rows[currentTD].cells[3].innerHTML
              shift_end_time = document.getElementById("myTableData").rows[currentTD].cells[4].innerHTML
              obj.value = 'Save'
            }

          else {
              document.getElementById("myTableData").rows[currentTD].cells[0].setAttribute("contentEditable", false);
              document.getElementById("myTableData").rows[currentTD].cells[1].setAttribute("contentEditable", false);
              document.getElementById("myTableData").rows[currentTD].cells[2].setAttribute("contentEditable", false);
              document.getElementById("myTableData").rows[currentTD].cells[3].setAttribute("contentEditable", false);
              document.getElementById("myTableData").rows[currentTD].cells[4].setAttribute("contentEditable", false);
              document.getElementById("myTableData").rows[currentTD].cells[5].setAttribute("contentEditable", false);
              document.getElementById("myTableData").rows[currentTD].style.backgroundColor = "#FFFFFF"
              obj.value = 'Edit'

              var newshift = {
                       'employee_type': document.getElementById("myTableData").rows[currentTD].cells[0].innerHTML ,
                       'days_worked': document.getElementById("myTableData").rows[currentTD].cells[1].innerHTML,
                       'num_employees':  document.getElementById("myTableData").rows[currentTD].cells[2].innerHTML,
                       'shift_start_time':  document.getElementById("myTableData").rows[currentTD].cells[3].innerHTML,
                       'shift_end_time':  document.getElementById("myTableData").rows[currentTD].cells[4].innerHTML,
                       'old_employee_type':employee_type,
                       'old_days_worked': days_worked,
                       'old_num_employees': num_employees,
                       'old_shift_start_time': shift_start_time,
                       'old_shift_end_time': shift_end_time
               }


              setCSRFToken($('meta[name="csrf-token"]').attr('content'));

              $.ajax({
                  type: 'POST',
                  data: newshift,
                  url: '/people/updateshift',
                  dataType: 'JSON'
              });

          }

        }


    #myform
    form.form-group(action='/people/shift', method='POST')
      input.form-control(type='hidden',  name='_csrf', value=_csrf)
      br
      #helper.label.control-label Enter recurring shifts below:
      br

      br
      br
      label.col-sm-2.control-label(for='employee_type') Employee Type
      .col-sm-8
        input#name.form-control(type='text', name='employee_type', placeholder='Employee Type', autofocus='autofocus', required='required')
      br
      br
      br
      label.col-sm-2.control-label(for='days_week_worked') Days of week worked:
      .col-sm-8

        |         Mon:
        input#type.checkbox-inline(type='checkbox', name='days_week_worked', value = 'Monday', autofocus='autofocus')
        |         Tues:
        input#type.checkbox-inline(type='checkbox', name='days_week_worked', value = 'Tuesday', autofocus='autofocus', )
        |         Wed:
        input#type.checkbox-inline(type='checkbox', name='days_week_worked', value = 'Wednesday', autofocus='autofocus')
        |         Thurs:
        input#type.checkbox-inline(type='checkbox', name='days_week_worked',  value = 'Thursday', autofocus='autofocus')
        |         Fri:
        input#type.checkbox-inline(type='checkbox', name='days_week_worked', value = 'Friday', autofocus='autofocus')
        |         Sat:
        input#type.checkbox-inline(type='checkbox', name='days_week_worked', value = 'Saturday', autofocus='autofocus')
        |         Sun:
        input#type.checkbox-inline(type='checkbox', name='days_week_worked', value = 'Sunday', autofocus='autofocus')
      br
      br
      br
      label.col-sm-2.control-label(for='num_employees') # of employees needed:
      .col-sm-8
        input#min_hours.form-control(type='number', name='num_employees', placeholder='# of Employees', autofocus='autofocus', required='required')
      br
      br
      br
      br
      label.col-sm-2.control-label(for='start_time') Shift start:
      .col-sm-8
        input#max_hours.form-control(type='text', name='start_time', placeholder='12:00', autofocus='autofocus', required='required')
      br
      br
      br
      label.col-sm-2.control-label(for='end_time') Shift end time:
      .col-sm-8
        input#email.form-control(type='text', name='end_time', placeholder='12:00', autofocus='autofocus', required='required')
      br
      br
      br

      .form-group
        .col-sm-offset-2.col-sm-7
          button.col-sm-3.btn.btn-primary(type='submit', value='Add') Add
    br
    br

    #mydata
      table#myTableData(border='1', cellpadding='2')
        tr
          th
            b Employee type
          th
            b Days worked
          th
            b Number of employees
          th
            b Shift start
          th
            b Shift end
          th
            b Update
          th
            b Delete

        each shf in shift

          // build a new table row
          tr

            // insert table data
            td #{shf.employee_type}
            td #{shf.days_worked}
            td #{shf.num_employees}
            td #{shf.shift_start_time}
            td #{shf.shift_end_time}

            // add the update and delete buttons
            td
              input(type="button" name = "btn-Edit" value = "Edit" onClick="Javacsript:editRow(this)")
            td
              input(type="button" name = "Delete" value = "Delete" onClick="Javacsript:deleteRow(this)")

            // move to next person in the people array ...





    br
    br










  #people.page-header
    .heading
      link(rel='stylesheet', type='text/css', href='css/launch_main.css')
      link(rel='stylesheet', type='text/css', href='css/launch_devices.css')
      .container-sml.text-center
        .col-12
          #login.heading
            | Employees
    head
      script(src='http://ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js').
      script(type='text/javascript').
        function addRow1() {
        //variables
          var myName = document.getElementById("name");
          var type = document.getElementById("type");
          var min_hours = document.getElementById("min_hours");
          var max_hours = document.getElementById("max_hours");
          var email = document.getElementById("email");
          var phone_number = document.getElementById("phone_number");
          var table = document.getElementById("myTableData1");
          var rowCount = table.rows.length;
          var row = table.insertRow(rowCount);
          row.insertCell(0).innerHTML= myName.value;
          row.insertCell(1).innerHTML= type.value;
          row.insertCell(2).innerHTML= min_hours.value;
          row.insertCell(3).innerHTML= max_hours.value;
          row.insertCell(4).innerHTML= email.value;
          row.insertCell(5).innerHTML= phone_number.value;
          row.insertCell(6).innerHTML= '<input type="button" value = "Update" onClick="Javacsript:editRow(this)">';
          row.insertCell(7).innerHTML= '<input type="button" value = "Delete" onClick="Javacsript:deleteRow(this)">';
        }



        function deleteRow1(obj) {
          var index = obj.parentNode.parentNode.rowIndex;
          var table = document.getElementById("myTableData1");
          var currentTD = obj.parentNode.parentNode.rowIndex;
          var row_length = document.getElementById("myTableData1").rows[currentTD].cells.length;
          var user = {
             'name': document.getElementById("myTableData1").rows[currentTD].cells[0].innerHTML ,
             'type': document.getElementById("myTableData1").rows[currentTD].cells[1].innerHTML,
             'min_hours':  document.getElementById("myTableData1").rows[currentTD].cells[2].innerHTML,
             'max_hours':  document.getElementById("myTableData1").rows[currentTD].cells[3].innerHTML,
             'email':  document.getElementById("myTableData1").rows[currentTD].cells[4].innerHTML,
             'phone_number':  document.getElementById("myTableData1").rows[currentTD].cells[5].innerHTML
           }

          setCSRFToken($('meta[name="csrf-token"]').attr('content'));
          $.ajax({
              type: 'POST',
              data: user,
              url: '/people/deletepeople',
              dataType: 'JSON'
          });
          table.deleteRow(index);
        }


        //setting global variables
        var var_name
        var var_type
        var var_min_hours
        var var_max_hours
        var var_email
        var var_phone_number


        var CSRF_HEADER = 'x-csrf-token';

        var setCSRFToken = function (securityToken) {
          jQuery.ajaxPrefilter(function (options, _, xhr) {
            if (!xhr.crossDomain) {
              xhr.setRequestHeader(CSRF_HEADER, securityToken);
            }
          });
        };



        function editRow1(obj) {
          var currentTD = obj.parentNode.parentNode.rowIndex;
          var table = document.getElementById("myTableData1");
          var row_length = document.getElementById("myTableData1").rows[currentTD].cells.length;
          console.log(obj.parentNode);

          if (obj.value == 'Edit') {
            document.getElementById("myTableData1").rows[currentTD].cells[0].setAttribute("contentEditable", true);
            document.getElementById("myTableData1").rows[currentTD].cells[1].setAttribute("contentEditable", true);
            document.getElementById("myTableData1").rows[currentTD].cells[2].setAttribute("contentEditable", true);
            document.getElementById("myTableData1").rows[currentTD].cells[3].setAttribute("contentEditable", true);
            document.getElementById("myTableData1").rows[currentTD].cells[4].setAttribute("contentEditable", true);
            document.getElementById("myTableData1").rows[currentTD].cells[5].setAttribute("contentEditable", true);

            document.getElementById("myTableData1").rows[currentTD].style.backgroundColor = "#d2f9e3";

             var_name = document.getElementById("myTableData1").rows[currentTD].cells[0].innerHTML
             var_type =  document.getElementById("myTableData1").rows[currentTD].cells[1].innerHTML
             var_min_hours =  document.getElementById("myTableData1").rows[currentTD].cells[2].innerHTML
             var_max_hours=  document.getElementById("myTableData1").rows[currentTD].cells[3].innerHTML
             var_email=  document.getElementById("myTableData1").rows[currentTD].cells[4].innerHTML
             var_phone_number =  document.getElementById("myTableData1").rows[currentTD].cells[5].innerHTML

           obj.value = 'Save'
          } else {
            document.getElementById("myTableData1").rows[currentTD].cells[0].setAttribute("contentEditable", false);
            document.getElementById("myTableData1").rows[currentTD].cells[1].setAttribute("contentEditable", false);
            document.getElementById("myTableData1").rows[currentTD].cells[2].setAttribute("contentEditable", false);
            document.getElementById("myTableData1").rows[currentTD].cells[3].setAttribute("contentEditable", false);
            document.getElementById("myTableData1").rows[currentTD].cells[4].setAttribute("contentEditable", false);
            document.getElementById("myTableData1").rows[currentTD].cells[5].setAttribute("contentEditable", false);
            document.getElementById("myTableData1").rows[currentTD].style.backgroundColor = "#FFFFFF"
            obj.value = 'Edit'


            var newUser = {
                     'name': document.getElementById("myTableData1").rows[currentTD].cells[0].innerHTML ,
                     'type': document.getElementById("myTableData1").rows[currentTD].cells[1].innerHTML,
                     'min_hours':  document.getElementById("myTableData1").rows[currentTD].cells[2].innerHTML,
                     'max_hours':  document.getElementById("myTableData1").rows[currentTD].cells[3].innerHTML,
                     'email':  document.getElementById("myTableData1").rows[currentTD].cells[4].innerHTML,
                     'phone_number':  document.getElementById("myTableData1").rows[currentTD].cells[5].innerHTML,
                     'old_name':var_name,
                     'old_type': var_type,
                     'old_min_hours': var_min_hours,
                     'old_max_hours': var_max_hours,
                     'old_email': var_email,
                     'old_phone_number':  var_phone_number
             }


            setCSRFToken($('meta[name="csrf-token"]').attr('content'));

            $.ajax({
                type: 'POST',
                data: newUser,
                url: '/people/updatepeople',
                dataType: 'JSON'
            });

        }}



    #myform
    form.form-group(action='/people/people', method='POST')
      input(type='hidden', name='_csrf', value=_csrf)
      br
      #helper.label.control-label Enter employee information below:
      br

      label.col-sm-2.control-label(for='Name') Name:
      .col-sm-8
        input#name.form-control(type='text', name='name', placeholder='Name', autofocus='autofocus', required='required')
      br
      br
      label.col-sm-2.control-label(for='type') Type:
      .col-sm-8
        input#type.form-control(type='text', name='type', placeholder='Employee Type', autofocus='autofocus', required='required')
      br
      br
      label.col-sm-2.control-label(for='min_hours') Min Hours/Week:
      .col-sm-8
        input#min_hours.form-control(type='number', name='min_hours', placeholder='Min hours required', autofocus='autofocus', required='required')
      br
      br
      br
      label.col-sm-2.control-label(for='max_hours') Max Hours/Week:
      .col-sm-8
        input#max_hours.form-control(type='number', name='max_hours', placeholder='Max hours required', autofocus='autofocus', required='required')
      br
      br
      br
      label.col-sm-2.control-label(for='email') Email:
      .col-sm-8
        input#email.form-control(type='email', name='email', placeholder='Email', autofocus='autofocus', required='required')
      br
      br
      br
      label.col-sm-2.control-label(for='phone_number') Phone Number:
      .col-sm-8
        input#phone_number.form-control(type='text', name='phone_number', placeholder='Phone Number', autofocus='autofocus', required='required')
      br
      br
      br
      .form-group
        .col-sm-offset-2.col-sm-7
          button.col-sm-3.btn.btn-primary(type='submit', value='Add', onclick='addRow1()') Add
    br
    br
    #mydata
      table#myTableData1(border='1', cellpadding='2')
        tr
          th
            b Name
          th
            b Type
          th
            b Min Hours
          th
            b Max Hours
          th
            b Email
          th
            b Phone Number
          th
            b Update
          th
            b Delete

        each person in people

          // build a new table row
          tr

            // insert table data
            td #{person.name}
            td #{person.type}
            td #{person.min_hours}
            td #{person.max_hours}
            td #{person.email}
            td #{person.phone_number}

            // add the update and delete buttons
            td
                  input(type="button" name = "Edit" value = "Edit" onClick="Javacsript:editRow1(this)")
            td
              input(type="button" value = "Delete" onClick="Javacsript:deleteRow1(this)")

            // move to next person in the people array ...


      br
      br
