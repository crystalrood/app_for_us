//********begin manual extend layout paste*****************
html
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    meta(name='theme-color' content='#4DA5F4')
    meta(name='csrf-token', content=_csrf)
    title #{title} - Hackathon Starter
    link(rel='shortcut icon', href='/favicon.png')
    link(rel='stylesheet', href='/css/main.css')

  body
  include partials/header

  .container
    include partials/flash
    block content

  include partials/footer

  script(src='/js/lib/jquery-2.2.4.min.js')
  script(src='/js/lib/bootstrap.min.js')
  script(src='/js/main.js')

  // Google Analytics: change UA-XXXXX-X to be your site's ID
  script.
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
    ga('create', 'UA-XXXXX-X', 'auto');
    ga('send', 'pageview');
  //*****************end manual extend layout paste*****************//

block content

  if !user
    doctype html
    html
      head
        link(rel='stylesheet', type='text/css', href='css/launch_main.css')
        link(rel='stylesheet', type='text/css', href='css/launch_devices.css')
        title
          | QuickShifts
        meta(charset='utf-8')
        meta(name='viewport', content='width=device-width,initial-scale=1')
      body
        link(rel='stylesheet', type='text/css', href='css/launch_main.css')
        link(rel='stylesheet', type='text/css', href='css/launch_devices.css')
        header.header
          .container-lrg
            .col-12.spread
              div
                .logo
                  | QuickShifts
              //div
                a.nav-link(href='#')
                  | Twitter
                a.nav-link(href='#')
                  | Facebook
          .container-sml
            .col-12.text-center
              .heading
                | Create employee schedules, quickly
              .paragraph
                | The easiest way to schedule and communicate with hourly workers. Save time by letting us generate a range of schedules for you based on your shift needs and your employees' availability.
              .ctas
                a.ctas-button(href='/signup')
                  | Sign Up
          .container-lrg
            .centerdevices.col-12

        .feature4
          .container-lrg.flex
            .col-5.centervertical
              h3.subheading.center
                | Fair and efficient scheduling
              p.paragraph
                | You input shift requirements (e.g. 2 cooks needed from 9am-5pm) and target hours for each employee. Employees indicate availability for upcoming shifts. We send you all schedules meeting both your shift requirements and your employees' availability. Magic.
            .col-1
            .col-6
              .sidedevices
                .browserwrapper
                  .browser
                    .mask
                      img.mask-img(style='max-width:100%;', height='auto;', src='http://erikrood.com/calendar_feature.png')

        .feature2
          #two-feature.container-lrg.flex
            .col-6
              br
              h3.subheading.center Free 30-day trial
              p.paragraph
                | We want you to be completely happy with our product,
                |which is why we encourage you to try it out before you commit to a paid plan.
              br
              br
              br
              br
            .col-6
              br
              h3.subheading.center Simple scheduling
              p.paragraph
                | Our software learns from your past decisons to help suggest future schedules, saving you more time the longer you're with us.
                | Avoid conflicts, knowing that we've calculated all possible schedules meeting both your preferences and your employee's availability.
        br
        #home.promo
          .promo__wrap.fence
            h3.promo__text See which plan is right for your team:
            div
              a.button.button--outline(href='/prices') View Pricing & Plans
        .footer
          .container-sml.text-center
            .col-12
              .heading
                | Get started now, for free.
              .ctas
                a.ctas-button(href='/signup')
                  | Sign Up
        //  .container-sml.footer-nav
            .col-12.text-center
              div
                a.nav-link
                  | Twitter
                a.nav-link
                  | Facebook
                a.nav-link
                  | Contact
                a.nav-link
                  | TOS
                a.nav-link
                  | Privacy
              br















  else if user.user_type == 'schedule_type'
    //******
    //header information that was copied and pasted
    //******
    doctype html
    html
      head
        meta(charset='utf-8')
        meta(http-equiv='X-UA-Compatible', content='IE=edge')
        meta(name='viewport', content='width=device-width, initial-scale=1.0')
        meta(name='theme-color' content='#4DA5F4')
        meta(name='csrf-token', content=_csrf)
        title #{title} - Hackathon Starter
        link(rel='shortcut icon', href='/favicon.png')
        link(rel='stylesheet', href='/css/main.css')
        link(rel='stylesheet', type='text/css', href='css/launch_main.css')
        link(rel='stylesheet', type='text/css', href='css/launch_devices.css')
      body
        include partials/header
        script(src='/js/lib/jquery-2.2.4.min.js')
        script(src='/js/lib/bootstrap.min.js')
        script(src='/js/main.js')
        link(rel='stylesheet', href='/css/main.css')
        link(rel='stylesheet', type='text/css', href='css/launch_main.css')
        link(rel='stylesheet', type='text/css', href='css/launch_devices.css')
        .container
          include partials/flash
          block content

        include partials/footer
        script(src='/js/lib/jquery-2.2.4.min.js')
        script(src='/js/lib/bootstrap.min.js')
        script(src='/js/main.js')


        // Google Analytics: change UA-XXXXX-X to be your site's ID
        script.
          (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
          (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
          })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
          ga('create', 'UA-XXXXX-X', 'auto');
          ga('send', 'pageview');






        // ********
        // ********
        // ********
        //adding my own script to load in table
        // ********
        // ********
        // ********
        script(type='text/javascript').

          var CSRF_HEADER = 'x-csrf-token';
          var setCSRFToken = function (securityToken) {
            jQuery.ajaxPrefilter(function (options, _, xhr) {
              if (!xhr.crossDomain) {
                xhr.setRequestHeader(CSRF_HEADER, securityToken);
              }
            });
          };


          function get_pretty_date(value){
            var start_date = new Date(value)
            var s_year = start_date.getFullYear();
            var s_month = start_date.getMonth() + 1;
            if(s_month <= 9)
                s_month = '0'+s_month;
            var s_day= start_date.getDate();
            if(s_day <= 9)
                s_day = '0'+s_day;

            var s_prettyDate = s_month +'-'+ s_day + '-'+  s_year
            return s_prettyDate
          }
          

          function remove_dups(value){
          var seen = {};
          var out_cal_dates = [];
          var j = 0;
          for(var i = 0; i < value.length; i++) {
              var item = value[i];
              if(seen[item] !== 1) {
                    seen[item] = 1;
                    out_cal_dates[j++] = item;
              }
              }
          return out_cal_dates;
          }
          
          window.onload = function bring_in_da_data() {
            
              //getting the data from the initial pull upon page load
              var data_for_db = document.getElementById("docs_json").value;
              var data_for_db_value = JSON.parse( data_for_db );
              
              var shifts_data = data_for_db_value.modeledshifts;
              var schedule_data = data_for_db_value.schedule;

              // **********
              //filling in the dropdown
              //doing work to fill in the drop down
              var listItems = [];

              //putting items into initial list
              for (var i = 0; i < schedule_data.length; i++){  
              //getting all the dates together
              var s_prettyDate = get_pretty_date(schedule_data[i].schedule_start)
              var e_prettyDate = get_pretty_date(schedule_data[i].schedule_end)
              var manager_lockout = get_pretty_date(schedule_data[i].manager_lockout)
              var today_date = new Date()
              today_date = get_pretty_date(today_date)
            
              itemTest = s_prettyDate+ " to " + e_prettyDate;
              
              if(manager_lockout <= today_date){
                listItems.push(itemTest);
              }
             }
             //removing duplicates from the listitems function
             var out = remove_dups(listItems)
             
             out.sort()

            //putting values form de-deuped list into dropdown
            var dropdown = document.getElementById("ddl");
            for (var i = 0; i<out.length; i++){
              var itemTest= out[i];
              dropdown[dropdown.length] = new Option(itemTest, itemTest);
            };
            
            dropdown.selectedIndex = 0;
            
            
            // *****
            // populating table or presenting message that the schedule is being
            //created
            
            var current_selected_date = out[0].substring(0,10)
            var message_to_manager = document.getElementById("message_to_manager");
          
            for (var i = 0; i < schedule_data.length; i++){  
            //getting all the dates together
            var s_prettyDate = get_pretty_date(schedule_data[i].schedule_start)
            var schedule_release = get_pretty_date(schedule_data[i].final_schedule_release)
            var today_date = new Date()
            today_date = get_pretty_date(today_date)
          
            //compare the current selection of the dropdown to the start date
            //within the schedule data, if dates are equal lets take a deeper look
            if (current_selected_date == s_prettyDate){
              //if the schedule relese date is in the future
              // show the message to the manager
              if(schedule_release>=today_date){
                message_to_manager.type = ''
              }  
            }
           }
           
           if (message_to_manager.type == 'hidden'){
               var listItems = [];
               //here i need to add code to populate table
               //getting all the date information for the calendar
               for (var i = 0; i < shifts_data.length; i++){
                   itemTest= shifts_data[i].shift_date_range_start + " to " + shifts_data[i].shift_date_range_end;
                   if (itemTest == out[0]){
                     listItems.push(shifts_data[i].date + "," + shifts_data[i].day_of_week)
                  };
               }
               
               //removing duplicates
               var out_cal_dates = remove_dups(listItems)
               out_cal_dates.sort()
                 

                //clearing list
                var listItems = [];

                //now it's time to pull unique employee types
                for (var i = 0; i < shifts_data.length; i++){
                  itemTest= shifts_data[i].shift_date_range_start + " to " + shifts_data[i].shift_date_range_end;
                  if (itemTest == out[0]){
                    listItems[i] = shifts_data[i].employee_type
                  };
                };

                //getting only the unique employee type for the calendar
                var out_emp_types = remove_dups(listItems)
                out_emp_types.sort()

                //
                //adding the date shit to an html string to put into the table
                var trHTML;
                trHTML += '<tr><td>' + 'Employee Type'

                for (var i = 0; i < out_cal_dates.length; i++){
                  var  title = out_cal_dates[i].split(",")
                  trHTML += '<td>' + title[1] + '<br>' + '<br>' + title[0]

                };


                $('#myTableData1').append(trHTML);


                trHTML = ''
                //buidling employee types and shifts for employee schedule

                var table = document.getElementById("myTableData1");
                for(var j = 0; j< out_emp_types.length; j++){
                  var emp_type = out_emp_types[j]
                  trHTML += '<tr><td>'+ emp_type + '<br><br><br>'

                  //getting the calendar dates in order so i can add them to the schedule in order :)
                  for (var i = 0; i < out_cal_dates.length; i++){
                    var  title = out_cal_dates[i].split(",")

                    //i need to reset list items and the varaible m so i can re-add to shifts for a given date to 1 list
                    listItems = []
                    var m = 0

                    //iterating through the json
                    for (var k = 0; k < shifts_data.length; k++){

                      //if the date in in the json thing matches the calendar date in the calendar then i enter here
                      if (shifts_data[k].date == title[0] && shifts_data[k].employee_type == emp_type){
                        //if it equaly i add it to the list here
                        var value = shifts_data[k].shift_time_start + ' to ' + shifts_data[k].shift_time_end
                        //ensuring i don't add a duplicate value
                        if (listItems.indexOf(value)==-1) {
                          listItems[m] = value
                          m += 1
                        }
                      };
                    };

                    if(listItems.length == 0){
                      trHTML += '<td>'
                    }

                    if(listItems.length > 0){
                      trHTML += '<td>'
                      for (var n = 0; n < listItems.length; n++){
                        trHTML += '<div style="width:100px;height:60px;border:5px solid #a1a8e0;background-colo #a1a8e0;background-color: #a1a8e0;border-radius: 7px;" class="type1">'+ listItems[n] + '</div><br>'
                      }

                    }

                  };

                }

                $('#myTableData1').append(trHTML);
            }

          }




          function change_table() {
            //gettting json values

            //getting the data from the initial pull upon page load
            var data_for_db = document.getElementById("docs_json").value;
            var data_for_db_value = JSON.parse( data_for_db );
            var message_to_manager = document.getElementById("message_to_manager");
            
            var shifts_data = data_for_db_value.modeledshifts;
            var schedule_data = data_for_db_value.schedule;
            

            //clearing table
            var table = document.getElementById("myTableData1")
            var ddl_value = document.getElementById("ddl").value;

            //delete existing table
            while(table.rows.length > 0) {
              table.deleteRow(0);
            }
            
            var current_selected_date = ddl_value.substring(0,10)
            
            for (var i = 0; i < schedule_data.length; i++){  
            //getting all the dates together
              var s_prettyDate = get_pretty_date(schedule_data[i].schedule_start)
              var schedule_release = get_pretty_date(schedule_data[i].final_schedule_release)
              var today_date = new Date()
              today_date = get_pretty_date(today_date)
            
              //compare the current selection of the dropdown to the start date
              //within the schedule data, if dates are equal lets take a deeper look
              if (current_selected_date == s_prettyDate){
                //if the schedule relese date is in the future
                // show the message to the manager
                if(schedule_release>=today_date){
                  message_to_manager.type = ''
                }  
                if(schedule_release<today_date){
                  message_to_manager.type = 'hidden'
                }  
              }
           }
           
           if (message_to_manager.type == 'hidden'){
               var listItems = [];
               //here i need to add code to populate table
               //getting all the date information for the calendar
               for (var i = 0; i < shifts_data.length; i++){
                   itemTest= shifts_data[i].shift_date_range_start + " to " + shifts_data[i].shift_date_range_end;
                   if (itemTest == ddl_value){
                     listItems.push(shifts_data[i].date + "," + shifts_data[i].day_of_week)
                  };
               }
               
               //removing duplicates
               var out_cal_dates = remove_dups(listItems)
               out_cal_dates.sort()
                 console.log(out_cal_dates)

                //clearing list
                var listItems = [];

                //now it's time to pull unique employee types
                for (var i = 0; i < shifts_data.length; i++){
                  itemTest= shifts_data[i].shift_date_range_start + " to " + shifts_data[i].shift_date_range_end;
                  if (itemTest == ddl_value){
                    listItems[i] = shifts_data[i].employee_type
                  };
                };

                //getting only the unique employee type for the calendar
                var out_emp_types = remove_dups(listItems)
                out_emp_types.sort()

                //
                //adding the date shit to an html string to put into the table
                var trHTML;
                trHTML += '<tr><td>' + 'Employee Type'

                for (var i = 0; i < out_cal_dates.length; i++){
                  var  title = out_cal_dates[i].split(",")
                  trHTML += '<td>' + title[1] + '<br>' + '<br>' + title[0]

                };


                $('#myTableData1').append(trHTML);


                trHTML = ''
                //buidling employee types and shifts for employee schedule

                var table = document.getElementById("myTableData1");
                for(var j = 0; j< out_emp_types.length; j++){
                  var emp_type = out_emp_types[j]
                  trHTML += '<tr><td>'+ emp_type + '<br><br><br>'

                  //getting the calendar dates in order so i can add them to the schedule in order :)
                  for (var i = 0; i < out_cal_dates.length; i++){
                    var  title = out_cal_dates[i].split(",")

                    //i need to reset list items and the varaible m so i can re-add to shifts for a given date to 1 list
                    listItems = []
                    var m = 0

                    //iterating through the json
                    for (var k = 0; k < shifts_data.length; k++){

                      //if the date in in the json thing matches the calendar date in the calendar then i enter here
                      if (shifts_data[k].date == title[0] && shifts_data[k].employee_type == emp_type){
                        //if it equaly i add it to the list here
                        var value = shifts_data[k].shift_time_start + ' to ' + shifts_data[k].shift_time_end
                        //ensuring i don't add a duplicate value
                        if (listItems.indexOf(value)==-1) {
                          listItems[m] = value
                          m += 1
                        }
                      };
                    };

                    if(listItems.length == 0){
                      trHTML += '<td>'
                    }

                    if(listItems.length > 0){
                      trHTML += '<td>'
                      for (var n = 0; n < listItems.length; n++){
                        trHTML += '<div style="width:100px;height:60px;border:5px solid #a1a8e0;background-colo #a1a8e0;background-color: #a1a8e0;border-radius: 7px;" class="type1">'+ listItems[n] + '</div><br>'
                      }

                    }

                  };

                }

                $('#myTableData1').append(trHTML);
            }



          };



          // ********
          // ********
          // ********
          //adding my own script to load in table
          // ********
          // ********
          // ********


      head
        h1 Current schedule
        br
        br
        input(type='hidden', id="docs_json", value= JSON.stringify(locals))
        br
        

        button.col-sm-3.btn.btn-primary(type='submit', value='Add', onClick="") View by employee type
        br
        br

        button.col-sm-3.btn.btn-primary(type='submit', value='Add', onClick="") View by employee name
        br
        br
        br
        select#ddl(onchange="change_table()")
        br
        br
        
        br


        #mydata
          b Employee types saved in the system:
          table#myTableData1(border='1', cellpadding='2')
          input(type='hidden', id="message_to_manager", value= 'This schedule is currently being created')  
          br
          br















  else if user.user_type == 'employee_type'
    doctype html
    html
      head
        meta(charset='utf-8')
        meta(http-equiv='X-UA-Compatible', content='IE=edge')
        meta(name='viewport', content='width=device-width, initial-scale=1.0')
        meta(name='theme-color' content='#4DA5F4')
        meta(name='csrf-token', content=_csrf)
        title #{title} - Hackathon Starter
        link(rel='shortcut icon', href='/favicon.png')
        link(rel='stylesheet', href='/css/main.css')
        link(rel='stylesheet', type='text/css', href='css/launch_main.css')
        link(rel='stylesheet', type='text/css', href='css/launch_devices.css')
      body
        include partials/header
        script(src='/js/lib/jquery-2.2.4.min.js')
        script(src='/js/lib/bootstrap.min.js')
        script(src='/js/main.js')
        link(rel='stylesheet', href='/css/main.css')
        .container
          include partials/flash
          block content

        include partials/footer

        script(src='/js/lib/jquery-2.2.4.min.js')
        script(src='/js/lib/bootstrap.min.js')
        script(src='/js/main.js')

        // Google Analytics: change UA-XXXXX-X to be your site's ID
        script.
          (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
          (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
          })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
          ga('create', 'UA-XXXXX-X', 'auto');
          ga('send', 'pageview');
